# OOM System Configuration Template
# This file defines how GitHub secrets map to system configuration
# Environment variables will override these settings

# System Information
SYSTEM_NAME=oom-system
VERSION=1.0.0
ENVIRONMENT=${ENVIRONMENT:-development}

# Database Configuration
# Uses GitHub secrets: DATABASE_URL, DB_USERNAME, DB_PASSWORD
DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@localhost:5432/oom_system}
DB_POOL_SIZE=${DB_POOL_SIZE:-10}
DB_MAX_OVERFLOW=${DB_MAX_OVERFLOW:-20}
DB_POOL_TIMEOUT=${DB_POOL_TIMEOUT:-30}

# Redis Configuration
# Uses GitHub secrets: REDIS_URL, REDIS_PASSWORD
REDIS_URL=${REDIS_URL:-redis://localhost:6379}
REDIS_MAX_CONNECTIONS=${REDIS_MAX_CONNECTIONS:-20}
REDIS_RETRY_ON_TIMEOUT=${REDIS_RETRY_ON_TIMEOUT:-true}

# Authentication & Security
# Uses GitHub secrets: JWT_SECRET_KEY, ENCRYPTION_KEY, API_SECRET_KEY
JWT_SECRET_KEY=${JWT_SECRET_KEY}
JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
JWT_EXPIRATION_HOURS=${JWT_EXPIRATION_HOURS:-24}
ENCRYPTION_KEY=${ENCRYPTION_KEY}
API_SECRET_KEY=${API_SECRET_KEY}

# AI/ML Service Configuration
# Uses GitHub secrets: OPENAI_API_KEY, ANTHROPIC_API_KEY, HUGGINGFACE_API_KEY, PINECONE_API_KEY
OPENAI_API_KEY=${OPENAI_API_KEY}
OPENAI_MODEL=${OPENAI_MODEL:-gpt-4}
OPENAI_MAX_TOKENS=${OPENAI_MAX_TOKENS:-4000}

ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
ANTHROPIC_MODEL=${ANTHROPIC_MODEL:-claude-3-sonnet-20240229}
ANTHROPIC_MAX_TOKENS=${ANTHROPIC_MAX_TOKENS:-4000}

HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
HUGGINGFACE_MODEL=${HUGGINGFACE_MODEL:-microsoft/DialoGPT-large}

PINECONE_API_KEY=${PINECONE_API_KEY}
PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT:-us-west1-gcp}
PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME:-oom-embeddings}

# Message Broker Configuration
MESSAGE_BROKER_TYPE=${MESSAGE_BROKER_TYPE:-kafka}

# Kafka Configuration (if using Kafka)
KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS:-localhost:9092}
KAFKA_USERNAME=${KAFKA_USERNAME}
KAFKA_PASSWORD=${KAFKA_PASSWORD}
KAFKA_SECURITY_PROTOCOL=${KAFKA_SECURITY_PROTOCOL:-PLAINTEXT}
KAFKA_SASL_MECHANISM=${KAFKA_SASL_MECHANISM:-PLAIN}

# Service Ports Configuration
# Core AI Engines
REQUIREMENT_ANALYSIS_PORT=${REQUIREMENT_ANALYSIS_PORT:-8001}
MIND_ENGINE_PORT=${MIND_ENGINE_PORT:-8002}
CRITIC_ENGINE_PORT=${CRITIC_ENGINE_PORT:-8003}
META_ENGINE_PORT=${META_ENGINE_PORT:-8004}
AUTOML_SERVICE_PORT=${AUTOML_SERVICE_PORT:-8005}
LEARNING_METADATA_PORT=${LEARNING_METADATA_PORT:-8006}
INNOVATION_SERVICE_PORT=${INNOVATION_SERVICE_PORT:-8007}
COLLABORATION_SERVICE_PORT=${COLLABORATION_SERVICE_PORT:-8008}
PROGRAM_MANAGER_PORT=${PROGRAM_MANAGER_PORT:-8009}
TASK_MANAGER_PORT=${TASK_MANAGER_PORT:-8010}

# Infrastructure Services
API_GATEWAY_PORT=${API_GATEWAY_PORT:-8000}
POSTGRES_PORT=${POSTGRES_PORT:-5432}
REDIS_PORT=${REDIS_PORT:-6379}
KAFKA_PORT=${KAFKA_PORT:-9092}
PROMETHEUS_PORT=${PROMETHEUS_PORT:-9090}
GRAFANA_PORT=${GRAFANA_PORT:-3000}

# Monitoring Configuration
# Uses GitHub secrets: GRAFANA_API_KEY, GRAFANA_PASSWORD, PROMETHEUS_URL, DATADOG_API_KEY
ENABLE_METRICS=${ENABLE_METRICS:-true}
ENABLE_TRACING=${ENABLE_TRACING:-true}
ENABLE_LOGGING=${ENABLE_LOGGING:-true}

PROMETHEUS_URL=${PROMETHEUS_URL:-http://localhost:9090}
GRAFANA_URL=${GRAFANA_URL:-http://localhost:3000}
GRAFANA_API_KEY=${GRAFANA_API_KEY}
GRAFANA_PASSWORD=${GRAFANA_PASSWORD:-admin}

JAEGER_URL=${JAEGER_URL:-http://localhost:16686}
JAEGER_AGENT_HOST=${JAEGER_AGENT_HOST:-localhost}
JAEGER_AGENT_PORT=${JAEGER_AGENT_PORT:-6831}

# DataDog (if using)
DATADOG_API_KEY=${DATADOG_API_KEY}
DATADOG_APP_KEY=${DATADOG_APP_KEY}
DATADOG_SITE=${DATADOG_SITE:-datadoghq.com}

# Logging Configuration
LOG_LEVEL=${LOG_LEVEL:-INFO}
LOG_FORMAT=${LOG_FORMAT:-json}
LOG_FILE=${LOG_FILE:-/var/log/oom-system.log}
LOG_MAX_SIZE=${LOG_MAX_SIZE:-100MB}
LOG_BACKUP_COUNT=${LOG_BACKUP_COUNT:-10}

# Performance Configuration
WORKER_PROCESSES=${WORKER_PROCESSES:-4}
WORKER_CONNECTIONS=${WORKER_CONNECTIONS:-1000}
REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-30}
KEEP_ALIVE_TIMEOUT=${KEEP_ALIVE_TIMEOUT:-65}

# Resource Limits
MEMORY_LIMIT=${MEMORY_LIMIT:-1Gi}
CPU_LIMIT=${CPU_LIMIT:-1000m}
MEMORY_REQUEST=${MEMORY_REQUEST:-512Mi}
CPU_REQUEST=${CPU_REQUEST:-500m}

# Auto-scaling Configuration
ENABLE_AUTOSCALING=${ENABLE_AUTOSCALING:-true}
MIN_REPLICAS=${MIN_REPLICAS:-2}
MAX_REPLICAS=${MAX_REPLICAS:-10}
TARGET_CPU_UTILIZATION=${TARGET_CPU_UTILIZATION:-70}
TARGET_MEMORY_UTILIZATION=${TARGET_MEMORY_UTILIZATION:-80}

# Cloud Provider Configuration
# AWS (if using)
AWS_REGION=${AWS_REGION:-us-west-2}
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
EKS_CLUSTER_NAME=${EKS_CLUSTER_NAME:-oom-cluster}
ECR_REGISTRY=${ECR_REGISTRY}

# Azure (if using)
AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
AZURE_RESOURCE_GROUP=${AZURE_RESOURCE_GROUP}
AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
AZURE_TENANT_ID=${AZURE_TENANT_ID}

# Google Cloud (if using)
GCP_PROJECT_ID=${GCP_PROJECT_ID}
GCP_REGION=${GCP_REGION:-us-west1}
GCP_SERVICE_ACCOUNT_KEY=${GCP_SERVICE_ACCOUNT_KEY}

# Container Registry Configuration
CONTAINER_REGISTRY=${CONTAINER_REGISTRY:-ghcr.io}
CONTAINER_NAMESPACE=${CONTAINER_NAMESPACE:-kulbirminhas-aiinitiative/oom}
DOCKER_REGISTRY_USERNAME=${DOCKER_REGISTRY_USERNAME}
DOCKER_REGISTRY_PASSWORD=${DOCKER_REGISTRY_PASSWORD}

# Notification Configuration
# Uses GitHub secrets: SLACK_WEBHOOK_URL
SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
SLACK_CHANNEL=${SLACK_CHANNEL:-#oom-alerts}
EMAIL_NOTIFICATIONS_ENABLED=${EMAIL_NOTIFICATIONS_ENABLED:-false}
SMTP_HOST=${SMTP_HOST}
SMTP_PORT=${SMTP_PORT:-587}
SMTP_USERNAME=${SMTP_USERNAME}
SMTP_PASSWORD=${SMTP_PASSWORD}

# Feature Flags
ENABLE_DEBUG_MODE=${ENABLE_DEBUG_MODE:-false}
ENABLE_EXPERIMENTAL_FEATURES=${ENABLE_EXPERIMENTAL_FEATURES:-false}
ENABLE_TELEMETRY=${ENABLE_TELEMETRY:-true}
ENABLE_CORS=${ENABLE_CORS:-true}
ENABLE_RATE_LIMITING=${ENABLE_RATE_LIMITING:-true}

# Mind Engine Configuration
MIND_ENGINE_DEFAULT_MODE=${MIND_ENGINE_DEFAULT_MODE:-orchestrate}
MIND_ENGINE_MAX_RECURSION=${MIND_ENGINE_MAX_RECURSION:-5}
MIND_ENGINE_TIMEOUT=${MIND_ENGINE_TIMEOUT:-300}

# Critic Engine Configuration
CRITIC_ENGINE_MEASUREMENT_INTERVAL=${CRITIC_ENGINE_MEASUREMENT_INTERVAL:-60}
CRITIC_ENGINE_METRICS=${CRITIC_ENGINE_METRICS:-functionality,performance,stability,scalability}

# AutoML Configuration
AUTOML_FRAMEWORKS=${AUTOML_FRAMEWORKS:-auto-sklearn,h2o-automl,autogluon}
AUTOML_TIME_BUDGET=${AUTOML_TIME_BUDGET:-3600}
AUTOML_METRIC=${AUTOML_METRIC:-accuracy}

# Security Configuration
CORS_ORIGINS=${CORS_ORIGINS:-*}
CORS_METHODS=${CORS_METHODS:-GET,POST,PUT,DELETE,OPTIONS}
CORS_HEADERS=${CORS_HEADERS:-*}

RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-100}
RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-60}

# Health Check Configuration
HEALTH_CHECK_INTERVAL=${HEALTH_CHECK_INTERVAL:-30}
HEALTH_CHECK_TIMEOUT=${HEALTH_CHECK_TIMEOUT:-10}
HEALTH_CHECK_RETRIES=${HEALTH_CHECK_RETRIES:-3}

# Backup Configuration
BACKUP_ENABLED=${BACKUP_ENABLED:-true}
BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-"0 2 * * *"}
BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
BACKUP_STORAGE_TYPE=${BACKUP_STORAGE_TYPE:-s3}
BACKUP_S3_BUCKET=${BACKUP_S3_BUCKET}

# Development Configuration
DEVELOPMENT_MODE=${DEVELOPMENT_MODE:-false}
HOT_RELOAD=${HOT_RELOAD:-false}
MOCK_EXTERNAL_SERVICES=${MOCK_EXTERNAL_SERVICES:-false}
ENABLE_SWAGGER_UI=${ENABLE_SWAGGER_UI:-true}

# Environment-specific Overrides
if [ "$ENVIRONMENT" = "development" ]; then
    LOG_LEVEL=DEBUG
    ENABLE_DEBUG_MODE=true
    HOT_RELOAD=true
    MOCK_EXTERNAL_SERVICES=true
    MIN_REPLICAS=1
    MAX_REPLICAS=3
fi

if [ "$ENVIRONMENT" = "staging" ]; then
    LOG_LEVEL=INFO
    ENABLE_DEBUG_MODE=false
    MIN_REPLICAS=2
    MAX_REPLICAS=5
    ENABLE_EXPERIMENTAL_FEATURES=true
fi

if [ "$ENVIRONMENT" = "production" ]; then
    LOG_LEVEL=WARNING
    ENABLE_DEBUG_MODE=false
    ENABLE_EXPERIMENTAL_FEATURES=false
    MIN_REPLICAS=3
    MAX_REPLICAS=10
    ENABLE_TELEMETRY=true
    BACKUP_ENABLED=true
fi
